//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OctoPlus.Console.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class OptionsStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal OptionsStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OctoPlus.Console.Resources.OptionsStrings", typeof(OptionsStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API key to use for deployment.
        /// </summary>
        internal static string ApiKey {
            get {
                return ResourceManager.GetString("ApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy using a stored profile.
        /// </summary>
        internal static string DeployFromProfile {
            get {
                return ResourceManager.GetString("DeployFromProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy multiple projects.
        /// </summary>
        internal static string DeployLatest {
            get {
                return ResourceManager.GetString("DeployLatest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deploy projects to environments.
        /// </summary>
        internal static string DeployProjects {
            get {
                return ResourceManager.GetString("DeployProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commands for dealing with environments.
        /// </summary>
        internal static string EnvironmentCommands {
            get {
                return ResourceManager.GetString("EnvironmentCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name the of the environment to deploy to.
        /// </summary>
        internal static string EnvironmentName {
            get {
                return ResourceManager.GetString("EnvironmentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force redeployment of the same package if no new one exists.
        /// </summary>
        internal static string ForceDeployOfSamePackage {
            get {
                return ResourceManager.GetString("ForceDeployOfSamePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group filter keyword.
        /// </summary>
        internal static string GroupFilter {
            get {
                return ResourceManager.GetString("GroupFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter interactive mode to deploy projects.
        /// </summary>
        internal static string InteractiveDeploy {
            get {
                return ResourceManager.GetString("InteractiveDeploy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stay running monitoring for package updates, pausing for the specified time in seconds.
        /// </summary>
        internal static string MonitorForPackages {
            get {
                return ResourceManager.GetString("MonitorForPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the json profile file you wish to deploy.
        /// </summary>
        internal static string ProfileFile {
            get {
                return ResourceManager.GetString("ProfileFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path to the directory containing the profile files you wish to deploy. Profile files must contain auto.profile.
        /// </summary>
        internal static string ProfileFileDirectory {
            get {
                return ResourceManager.GetString("ProfileFileDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project filter keyword.
        /// </summary>
        internal static string ProjectFilter {
            get {
                return ResourceManager.GetString("ProjectFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Promote project releases between environments.
        /// </summary>
        internal static string PromoteProjects {
            get {
                return ResourceManager.GetString("PromoteProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options pertaining to releases.
        /// </summary>
        internal static string Release {
            get {
                return ResourceManager.GetString("Release", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Release message to set.
        /// </summary>
        internal static string ReleaseMessage {
            get {
                return ResourceManager.GetString("ReleaseMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Release version number (must follow semantic versioning).
        /// </summary>
        internal static string ReleaseVersion {
            get {
                return ResourceManager.GetString("ReleaseVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t deploy, but save a profile instead to use later with the profile command.
        /// </summary>
        internal static string SaveProfile {
            get {
                return ResourceManager.GetString("SaveProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip any confirmation messages.
        /// </summary>
        internal static string SkipConfirmation {
            get {
                return ResourceManager.GetString("SkipConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Environment you wish to promote from.
        /// </summary>
        internal static string SourceEnvironment {
            get {
                return ResourceManager.GetString("SourceEnvironment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Url for your octopus install.
        /// </summary>
        internal static string Url {
            get {
                return ResourceManager.GetString("Url", resourceCulture);
            }
        }
    }
}
